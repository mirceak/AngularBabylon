{"version":3,"sources":["./src/custom/components/pages/register/register-content/register-content.component.ts","./src/custom/components/pages/register/register-content/register-content.component.html","./src/custom/components/pages/register/register-routing.module.ts","./src/custom/components/pages/register/register.component.ts","./src/custom/components/pages/register/register.component.html","./src/custom/components/pages/register/register.module.ts","./src/custom/components/pages/register/register.service.ts"],"names":[],"mappings":"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","file":"custom-components-pages-register-register-module.js","sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RegisterService } from '@custom/components/pages/register/register.service';\nimport { EntityUserService } from '@custom/entities/user/service/entity.user.service';\n\n@Component({\n  selector: 'app-register-content',\n  templateUrl: './register-content.component.html',\n  styleUrls: ['./register-content.component.scss'],\n  providers: [RegisterService],\n})\nexport class RegisterContentComponent {\n  form = new FormGroup({});\n\n  constructor(\n    public registerService: RegisterService,\n    private entityUserService: EntityUserService,\n    private router: Router\n  ) {}\n\n  register() {\n    this.entityUserService.register(this.form.value).subscribe(\n      (res) => {\n        this.router.navigate(['/login']);\n      },\n      (error) => console.log(error)\n    );\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title>Register</mat-card-title>\n  </mat-card-header>\n  <app-form-simple\n    [form]=\"form\"\n    [fields]=\"registerService.fields\"\n    [submitLabel]=\"'Register'\"\n    [submitIcon]=\"'follow_the_signs'\"\n    (onSubmit)=\"register()\"\n  ></app-form-simple>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from '@custom/components/pages/register/register.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-page-simple appPageFormly>\n  <app-nav-list nav-list></app-nav-list>\n  <app-register-content content></app-register-content>\n</app-page-simple>\n","import { NgModule } from '@angular/core';\n\nimport { RegisterComponent } from '@custom/components/pages/register/register.component';\nimport { RegisterContentComponent } from '@custom/components/pages/register/register-content/register-content.component';\nimport { RegisterRoutingModule } from '@custom/components/pages/register/register-routing.module';\nimport { PageFormlyModule } from '@custom/components/pages/shared/base/page-formly/page-formly.module';\n\n@NgModule({\n  declarations: [RegisterComponent, RegisterContentComponent],\n  imports: [PageFormlyModule, RegisterRoutingModule],\n  exports: [],\n})\nexport class RegisterModule {}\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { PageFormlyService } from '@custom/components/pages/shared/base/page-formly/page-formly.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  constructor(private pageFormlyService: PageFormlyService) {}\n  fields = [\n    {\n      key: 'username',\n      type: 'input',\n      templateOptions: {\n        label: 'Username',\n        placeholder: 'Enter username',\n        required: true,\n      },\n      validators: {\n        minLength: this.pageFormlyService.minLengthValidator(6),\n        required: this.pageFormlyService.requiredValidator,\n      },\n    },\n    {\n      key: 'email',\n      type: 'input',\n      templateOptions: {\n        label: 'Email',\n        placeholder: 'Enter email',\n        required: true,\n      },\n      validators: {\n        email: this.pageFormlyService.emailValidator,\n        required: this.pageFormlyService.requiredValidator,\n      },\n    },\n    {\n      key: 'password',\n      type: 'input',\n      templateOptions: {\n        label: 'Password',\n        required: true,\n      },\n      validators: {\n        minLength: this.pageFormlyService.minLengthValidator(6),\n        required: this.pageFormlyService.requiredValidator,\n      },\n    },\n    {\n      key: 'role',\n      type: 'select',\n      templateOptions: {\n        label: 'Role',\n        required: true,\n      },\n      hooks: {\n        onInit: (field?: FormlyFieldConfig) => {\n          field.templateOptions.options = [\n            {\n              value: null,\n              label: 'Select',\n            },\n            {\n              value: 'admin',\n              label: 'Admin',\n            },\n            {\n              value: 'user',\n              label: 'User',\n            },\n          ];\n        },\n      },\n      validators: {\n        min: this.pageFormlyService.minValidator(1),\n        required: this.pageFormlyService.requiredValidator,\n      },\n    },\n  ];\n}\n"],"sourceRoot":"webpack:///"}